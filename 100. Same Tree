//C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if((p==NULL&&q!=NULL)||(q==NULL&&p!=NULL)){
            return false;
        }
        else if(p==NULL&&q==NULL){
            return true;
        }
        else{
            if(p->val!=q->val){
                return false;
            }
            else{
                return isSameTree(p->left,q->left)&&isSameTree(p->right,q->right);
            }
        }        
    }
};

//Python
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSameTree(self, p: TreeNode, q: TreeNode) -> bool:
        if (p==None and q!=None) or (p!=None and q==None): return False
        elif p==None and q==None: return True
        else:
            if p.val!=q.val: return False
            else:
                return self.isSameTree(p.left,q.left) and self.isSameTree(p.right,q.right)
