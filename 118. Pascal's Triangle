//C++
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> V;
        vector<int> v_1{1};
        vector<int> v_2{1,1};
        if(numRows==0){
            return V;
        }
        V.push_back(v_1);
        if(numRows==1){
            return V;
        }
        V.push_back(v_2);
        if(numRows==2){
            return V;
        }
        for(int i=3;i<numRows+1;i++){
            vector<int> tempV;
            tempV.push_back(1);
            for(int j=1;j<i-1;j++){
                tempV.push_back(V[i-2][j-1]+V[i-2][j]);
            }
            tempV.push_back(1);
            V.push_back(tempV);
        }
        return V;
    }
};

//Python
class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        if numRows==0: return []
        if numRows==1: return [[1]]
        if numRows==2: return [[1],[1,1]]
        L=[[1],[1,1]]
        for i in range(3,numRows+1):
            tempL=[]
            tempL.append(1)
            for j in range(1,i-1):
                tempL.append(L[i-2][j-1]+L[i-2][j])
            tempL.append(1)
            L.append(tempL)
        return L
