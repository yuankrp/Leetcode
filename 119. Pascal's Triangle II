//C++
class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> V{1};
        if(rowIndex==0){
            return V;
        }
        V.push_back(1);
        if(rowIndex==1){
            return V;
        }
        vector<int> tempV;
        for(int i=2;i<rowIndex+1;i++){
            tempV.push_back(1);
            for(int j=1;j<i;j++){
                tempV.push_back(V[j-1]+V[j]);
            }
            tempV.push_back(1);
            if(i==rowIndex){
                break;
            }
            else{
                V.erase(V.begin(),V.end());
                V.assign(tempV.begin(),tempV.end());
                tempV.erase(tempV.begin(),tempV.end());
            }
        }
        return tempV;
    }
};

//Python
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        if rowIndex==0: return [1]
        if rowIndex==1: return [1,1]
        L=[1,1]
        for i in range(2,rowIndex+1):
            tempL=[]
            tempL.append(1)
            for j in range(1,i):
                tempL.append(L[j-1]+L[j])
            tempL.append(1)
            if i==rowIndex: return tempL
            else:
                L=[]
                L=tempL[0:len(tempL)]
