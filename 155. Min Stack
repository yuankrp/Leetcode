//C++
class MinStack {
private:
    stack<int> S;
    stack<int> M;
public:
    /** initialize your data structure here. */    
    MinStack() {}
    
    void push(int x) {
        S.push(x);
        if(M.empty()||x<=M.top()){
            M.push(x);
        }
    }
    
    void pop() {
        int top=S.top();
        S.pop();
        if(top==M.top()){
            M.pop();
        }
        
    }
    
    int top() {
        return S.top();
    }
    
    int getMin() {
        return M.top();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
 
 //Python
 class MinStack:

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.S=[]
        self.M=[]
        

    def push(self, x: int) -> None:
        self.S.append(x)
        if len(self.M)==0 or x<=self.M[-1]: self.M.append(x)
        

    def pop(self) -> None:
        top=self.S[-1]
        self.S.pop()
        if top==self.M[-1]: self.M.pop()
        

    def top(self) -> int:
        return self.S[-1]
        

    def getMin(self) -> int:
        return self.M[-1]
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(x)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
