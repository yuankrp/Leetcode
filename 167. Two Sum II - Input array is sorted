//C++
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        map<int,int> imap;
        vector<int> result;
        for(int i=0;i<numbers.size();i++){
            int Ntofind = target - numbers[i];
            if(imap.find(Ntofind)!=imap.end()){
                result.push_back(imap[Ntofind]+1);
                result.push_back(i+1);
                return result;
            }
            imap[numbers[i]]=i;
        }
        return result;           
    }
};

//Python
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        dict = {}
        for i in range(len(numbers)):
            t=target-numbers[i]
            if t in dict:
                return (dict[t]+1,i+1)
            dict[numbers[i]]=i
