//C++
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(!head){
            return NULL;
        }
        while(head && head->val==val){
            head=head->next;
        }
        ListNode* p=head;
        while(p){
            ListNode*q=p->next;
            if(q&&q->val==val){
                p->next=q->next;
            }
            else{
                p=p->next;
            }
        }
        return head;
    }
};

//Python
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeElements(self, head: ListNode, val: int) -> ListNode:
        if not head: return None
        while head and head.val==val: head=head.next
        p=head
        while p:
            q=p.next
            if q and q.val==val: p.next=q.next
            else: p=p.next
        return head
