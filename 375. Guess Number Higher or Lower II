//C++
class Solution {
public:
    int getMoneyAmount(int n) {
        vector<vector<int>> DP(n+1,vector<int>(n + 1, 0));
        for(int i=1;i<=n;i++){
            for(int j=i-1;j>0;j--){
                int s=INT_MAX;
                for(int k=j+1;k<i;k++){
                    int temp=k+max(DP[j][k-1],DP[k+1][i]);
                    if(temp<s) s=temp;
                }
                if(j==i-1) DP[j][i]=j;
                else DP[j][i]=s;
            }
        }
        return DP[1][n];
    }
};

//Python
class Solution:
    def getMoneyAmount(self, n: int) -> int:
        DP=[[0 for col in range(n+1)] for row in range(n+1)]
        for i in range(2,n+1):
            for j in range(i-1,0,-1):
                s=sys.maxsize
                for k in range(j+1,i):
                    temp=k+max(DP[j][k-1],DP[k+1][i])
                    if temp<s: s=temp
                if j==i-1: DP[j][i]=j
                else: DP[j][i]=s
        return DP[1][n]
