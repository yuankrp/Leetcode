//C++
class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        for(int i=0;i<ransomNote.length();i++){
            if(magazine.find(ransomNote[i])!=magazine.npos){     
                magazine.erase(magazine.find(ransomNote[i]),1);
            }
            else{
                return false;
            }
        }
        return true;
    }
};

//Python
class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        r=list(ransomNote)
        m=list(magazine)
        for i in range(len(r)):
            if r[i] in m: m.remove(r[i])
            else: return False
        return True
