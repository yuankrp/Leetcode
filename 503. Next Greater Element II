//C++
class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
        int L=nums.size();
        vector<int> res(L,-1);
        stack<int> idx;
        for(int i=0;i<2*L;i++){
            int n=i%L;
            while(!idx.empty() && nums[idx.top()]<nums[n]){
                res[idx.top()]=nums[n];
                idx.pop();
            }
            if(i<L) idx.push(i);
        }
        return res;
    }
};

//Python
class Solution:
    def nextGreaterElements(self, nums: List[int]) -> List[int]:
        L=len(nums)
        res=[-1]*L
        idx=[]
        for i in range(2*L):
            while idx and nums[idx[-1]]<nums[i%L]:
                res[idx.pop()]=nums[i%L]
            if i<L: idx.append(i)
        return res
