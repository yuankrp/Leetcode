//C++
class Solution {
public:
    int findLUSlength(vector<string>& strs) {
        int L=strs.size(),res=-1;
        while(L>0){
            bool flag=0;
            string s=strs.back();
            int len=s.length();
            strs.pop_back();
            for(int i=0;i<strs.size();i++){
                if(strs[i].length()==s.length()){
                    if(strs[i]==s) flag=1;
                }
                else if(strs[i].length()>s.length()){
                    string temp(s);
                    int j=0,k=0;
                    while(j<strs[i].length() && k<temp.length()){
                        if(temp[k]==strs[i][j]) k++;
                        j++;
                    }
                    if(k==temp.length()) flag=1;
                }
            }
            if(flag==0){
                if(len>res){
                    res=len;
                }
            }
            strs.insert(strs.begin(),s);
            L--;
        }
        return res;
    }
};

//Python
class Solution:
    def findLUSlength(self, strs: List[str]) -> int:
        L=len(strs)
        res=-1
        while L>0:
            flag=0
            s=strs.pop()
            for i in range(len(strs)):
                if len(strs[i])==len(s):
                    if strs[i]==s: flag=1
                elif len(strs[i])>len(s):
                    temp=list(s)
                    j=0
                    while j<len(strs[i]) and len(temp)>0:
                        if temp[0]==strs[i][j]: del temp[0]
                        j+=1
                    if len(temp)==0: flag=1
            if not flag:
                if len(s)>res: res=len(s)
            strs.insert(0,s)
            L-=1
        return res
