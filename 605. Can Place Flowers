//C++
class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        vector<int> L(flowerbed.size());
        for(int i=0;i<flowerbed.size();i++){
            if(flowerbed[i]==1){
                L[i]=1;
                if(i>0) L[i-1]=1;
                if(i<flowerbed.size()-1) L[i+1]=1;
            }
        }
        int s=0;
        for(int i=0;i<L.size();i++){
            if(L[i]==0){
                s++;
                if(i<L.size()-1) L[i+1]=1;
            }
        }        
        if(s>=n) return true;
        else return false;
    }
};

//Python
class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        L=[0]*len(flowerbed)
        for i in range(len(flowerbed)):
            if flowerbed[i]==1:
                L[i]=1
                if i>0: L[i-1]=1
                if i<len(flowerbed)-1: L[i+1]=1
        s=0
        for i in range(len(L)):
            if L[i]==0:
                s+=1
                if i<len(L)-1: L[i+1]=1               
        if s>=n: return True
        else: return False
