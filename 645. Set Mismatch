//C++
class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int a=0,b=0;
        if(nums[0]!=1) b=1;
        if(nums[nums.size()-1]!=nums.size()) b=nums.size();
        for(int i=1;i<nums.size();i++)
            if(nums[i]==nums[i-1]) a=nums[i];
            else if(b==0 && nums[i]!=nums[i-1]+1) b=nums[i]-1;
        return {a,b};
    }
};

//Python
class Solution:
    def findErrorNums(self, nums: List[int]) -> List[int]:
        res=[]
        nums.sort()
        a=0
        b=0
        if nums[0]!=1: b=1
        if nums[-1]!=len(nums): b=len(nums)
        for i in range(1,len(nums)):
            if nums[i]==nums[i-1]: a=nums[i]
            elif b==0 and nums[i]!=nums[i-1]+1: b=nums[i]-1
        res.append(a)
        res.append(b)
        return res
