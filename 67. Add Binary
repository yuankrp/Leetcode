//C++
class Solution {
public:
    string addBinary(string a, string b) {
        int la=a.length();
        int lb=b.length();
        int L=max(la,lb);
        if(la>lb){
            b.insert(b.begin(),la-lb,'0');
        }
        else if(la<lb){
            a.insert(a.begin(),lb-la,'0');
        }
        string c=b;
        int flag=0;
        for(int i=L-1;i>=0;i--){
            if(stoi(a.substr(i,1))+stoi(b.substr(i,1))+flag==0){
                c.replace(i,1,"0");
                flag=0;
            }
            else if(stoi(a.substr(i,1))+stoi(b.substr(i,1))+flag==1){
                c.replace(i,1,"1");
                flag=0;
            }
            else if(stoi(a.substr(i,1))+stoi(b.substr(i,1))+flag==2){
                c.replace(i,1,"0");
                flag=1;
            }
            else if(stoi(a.substr(i,1))+stoi(b.substr(i,1))+flag==3){
                c.replace(i,1,"1");
                flag=1;
            }
        }
        if(flag){
            c.insert(c.begin(),'1');
        }
        return c;
    }
};

//Python
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        a=list(a)
        b=list(b)
        la=len(a)
        lb=len(b)
        if la>lb:
            while lb<la:
                b.insert(0,'0')
                lb+=1
        elif lb>la:
            while la<lb:
                a.insert(0,'0')
                la+=1
        c=a
        flag=0
        for i in range(la-1,-1,-1):
            if int(a[i])+int(b[i])+flag==0:
                c[i]='0'
                flag=0
            elif int(a[i])+int(b[i])+flag==1:
                c[i]='1'
                flag=0
            elif int(a[i])+int(b[i])+flag==2:
                c[i]='0'
                flag=1
            elif int(a[i])+int(b[i])+flag==3:
                c[i]='1'
                flag=1
        if flag: c.insert(0,'1')
        c_str= "".join(c)
        return c_str
