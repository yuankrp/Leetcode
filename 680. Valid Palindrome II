//C++
class Solution {
public:
    bool validPalindrome(string s) {
        if(s.length()<2) return false;
        int i=0,j=s.length()-1;
        while (j>i){
            if(s[i]==s[j]){
                i++;
                j--;
            }
            else return isPalindrome(s,i+1,j) || isPalindrome(s,i,j-1);
        }
        return true;
    }
    
    bool isPalindrome(string s, int i, int j) {
        while (i<j){
            if (s[i]!=s[j]) return false;
            else{
                i++;
                j--;
            }
        }
        return true;
    }
};

//Python
class Solution:
    def validPalindrome(self, s: str) -> bool:
        if len(s)<2: return False
        i=0
        j=len(s)-1
        while j>i:
            if s[i]==s[j]:
                i+=1
                j-=1
            else: return self.isPalindrome(s,i+1,j) or self.isPalindrome(s,i,j-1)
        return True
        
    def isPalindrome(self, s: str, i: int, j: int) -> bool:
        while i<j:
            if s[i]!=s[j]: return False
            else:
                i+=1
                j-=1
        return True
        
