//C++
class Solution {
public:
    bool isOneBitCharacter(vector<int>& bits) {
        if(bits.size()==1) return true;
        if(bits[bits.size()-2]==0) return true;
        else{
            bits.pop_back();
            int i=0;
            while(bits.size()>0){
                int b=bits.back();
                bits.pop_back();
                if(b==1) i++;
                else break;
            }
            if(i%2==0) return true;
            else return false;
        }
    }
};

//Python
class Solution:
    def isOneBitCharacter(self, bits: List[int]) -> bool:
        if len(bits)==1: return True
        if bits[len(bits)-2]==0: return True
        else:
            bits.pop()
            i=0
            while len(bits)>0:
                b=bits.pop()
                if b==1: i+=1
                else: break
            if i%2==0: return True
            else: return False
