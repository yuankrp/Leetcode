//C++
class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        if(cost.size()<2) return 0;
        int c1=cost[0];
        int c2=cost[1];
        int p;
        for(int i=2;i<cost.size();i++){
            p=c2;
            c2=cost[i]+min(c1,c2);
            c1=p;
        }
        return min(c1,c2);
    }
};

//Python
class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        if len(cost)<2: return 0
        c1=cost[0]
        c2=cost[1]
        i=2
        while i<len(cost):
            p=c2
            c2=cost[i]+min(c1,c2)
            c1=p
            i+=1
        return min(c1,c2)
