//C++
class Solution {
public:
    int dominantIndex(vector<int>& nums) {
        auto maxPos = max_element(nums.begin(), nums.end());
        int idx=maxPos-nums.begin();
        int m=*maxPos;
        bool flag=0;
        for(int n: nums){
            if(n!=m && 2*n>m) flag=1;
        }
        if(flag) return -1;
        else return idx;
    }
};

//Python
class Solution:
    def dominantIndex(self, nums: List[int]) -> int:
        m=max(nums)
        flag=0
        for n in nums:
            if n!=m and m<n*2: flag=1
        if flag: return -1
        else: return nums.index(m)
            
