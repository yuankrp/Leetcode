//C++
class Solution {
public:
    int myAtoi(string str) {
        if(str.empty()) return 0;
        int i=0;
        while(i<str.length() && str[i]==' '){
            i++;
        }
        int flag=1;
        unsigned long long res=0;
        if(i<str.length() && (str[i]=='+' || str[i]=='-')){
            if(str[i]=='-') flag=-1;
            i++;
        }
        while(i<str.length() && str[i]>= '0' && str[i] <= '9'){
            res = 10 * res + (str[i] - '0');
            if(res>(unsigned long long)INT_MAX){
                if(flag==1) return INT_MAX;
                else return INT_MIN;
            }
            i++;
        }
        return int(res)*flag;
    }
};

//Python
class Solution:
    def myAtoi(self, str: str) -> int:
        s=""
        flag1=0
        flag2=0
        for t in str:
            if t.isdigit():
                s+=t
                flag1=1
            elif t==' ':
                if not flag1 and not flag2: s+=t
                else: break
            elif t=='+' or t=='-':
                if not flag1 and not flag2:
                    s+=t
                    flag2=1
                else: break
            else: break
        if not flag1: return 0
        r=int(s)
        if r>pow(2,31)-1: return pow(2,31)-1
        elif r<-pow(2,31): return -pow(2,31)
        return r
