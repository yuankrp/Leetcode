//C++
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==NULL){
            return head;
        }
        ListNode *temp=head;
        while(temp->next!=NULL){
            if(temp->val==temp->next->val){
                if(temp->next->next!=NULL){
                    temp->next=temp->next->next;
                }
                else{
                    temp->next=NULL;
                }
            }
            else{
                temp=temp->next;
            }
        }
        return head;
    }
};

//Python
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def deleteDuplicates(self, head: ListNode) -> ListNode:
        if head==None: return head
        temp=head
        while temp.next!=None:
            if temp.val==temp.next.val:
                if temp.next.next!=None: temp.next=temp.next.next
                else: temp.next=None
            else: temp=temp.next
        return head
