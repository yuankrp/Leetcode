//C++
class Solution {
public:
    vector<string> uncommonFromSentences(string A, string B) {
        map<string,int> memo;
        istringstream isa(A),isb(B);
        string s;
        while(isa>>s){
            memo[s]++;
        }
        while(isb>>s){
            memo[s]++;
        }
        vector<string> L;
        for(auto n: memo){
            if(n.second==1) L.push_back(n.first);
        }
        return L;
    }
};

//Python
class Solution:
    def uncommonFromSentences(self, A: str, B: str) -> List[str]:
        A=A.split()
        B=B.split()
        S=set(A)|set(B)
        L=[]
        for s in S:
            if A.count(s)+B.count(s)==1: L.append(s)
        return L
