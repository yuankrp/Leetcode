//C++
class RecentCounter {
private:
    vector<int> L;
public:
    RecentCounter() {
        
    }
    
    int ping(int t) {
        L.insert(L.begin(),t);
        while(!L.empty() && t-3000>L.back()){
            L.pop_back();
        }
        return L.size();
    }
};

/**
 * Your RecentCounter object will be instantiated and called as such:
 * RecentCounter* obj = new RecentCounter();
 * int param_1 = obj->ping(t);
 */
 
 //Python
 class RecentCounter:

    def __init__(self):
        self.L=[]

    def ping(self, t: int) -> int:
        self.L.insert(0,t)
        while len(self.L)>0 and t-3000>self.L[-1]:
            self.L.pop()
        return len(self.L)


# Your RecentCounter object will be instantiated and called as such:
# obj = RecentCounter()
# param_1 = obj.ping(t)
