//C++
class Solution {
public:
    bool isAlienSorted(vector<string>& words, string order) {
        bool flag=1;
        for(int i=1;i<words.size();i++){
            if(isValid(words[i-1],words[i],order)) continue;
            else flag=0;
        }
        return flag;
    }
    
    bool isValid(string w1, string w2, string order){
        int i=0,j=0;
        while(i<w1.length()&&j<w2.length()){
            if(order.find(w1[i])<order.find(w2[i])) return true;
            else if (order.find(w1[i])==order.find(w2[i])){
                i++;
                j++;
            }
            else return false;
        }
        if(i==w1.length()) return true;
        else return false;
    }
};

//Python
class Solution:
    def isAlienSorted(self, words: List[str], order: str) -> bool:
        flag=1
        for i in range(1,len(words)):
            if self.isValid(words[i-1],words[i],order): continue
            else: flag=0
        return flag
    
    def isValid(self, w1: str, w2: str, order: str) -> bool:
        i=0
        j=0
        while i<len(w1) and j<len(w2):
            if order.index(w1[i])<order.index(w2[i]): return True
            elif order.index(w1[i])==order.index(w2[i]):
                i+=1
                j+=1
            else: return False
        if i==len(w1): return True
        else: return False
