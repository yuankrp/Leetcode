//C++
class Solution {
public:
    int largestPerimeter(vector<int>& A) {
        sort(A.begin(),A.end());
        int m=A.size(),i=1;
        while(i<=m-2 && A[m-i]>=A[m-i-1]+A[m-i-2]){
            i++;
        }
        if(i==m-1) return 0;
        return A[m-i]+A[m-i-1]+A[m-i-2];
    }
};

//Python
class Solution:
    def largestPerimeter(self, A: List[int]) -> int:
        A.sort()
        m=len(A)
        i=1
        while i<=m-2 and A[m-i]>=A[m-i-1]+A[m-i-2]:
            i+=1
        if i==m-1: return 0
        return A[m-i]+A[m-i-1]+A[m-i-2]
