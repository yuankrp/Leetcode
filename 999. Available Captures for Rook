//C++
class Solution {
public:
    int numRookCaptures(vector<vector<char>>& board) {
        int x=0,y=0,r=0;
        for(int i=0;i<8;i++){
            for(int j=0;j<8;j++){
                if(board[i][j]=='R'){
                    x=i;
                    y=j;
                    break;
                }
            }
        }
        for(int i=x-1;i>=0;i--){
            if(board[i][y]=='B') break;
            if(board[i][y]=='p'){
                r++;
                break;
            }
        }
        for(int i=x+1;i<8;i++){
            if(board[i][y]=='B') break;
            if(board[i][y]=='p'){
                r++;
                break;
            }
        }
        for(int j=y-1;j>=0;j--){
            if(board[x][j]=='B') break;
            if(board[x][j]=='p'){
                r++;
                break;
            }
        }
        for(int j=y+1;j<8;j++){
            if(board[x][j]=='B') break;
            if(board[x][j]=='p'){
                r++;
                break;
            }
        }
        return r;
    }
};

//Python
class Solution:
    def numRookCaptures(self, board: List[List[str]]) -> int:
        x=0
        y=0
        r=0
        for i in range(8):
            for j in range(8):
                if board[i][j]=="R":
                    x=i
                    y=j
                    break
        for i in range(x-1,-1,-1):
            if board[i][y]=="B": break
            if board[i][y]=="p":
                r+=1
                break
        for i in range(x+1,8):
            if board[i][y]=="B": break
            if board[i][y]=="p":
                r+=1
                break
        for j in range(y-1,-1,-1):
            if board[x][j]=="B": break
            if board[x][j]=="p":
                r+=1
                break
        for j in range(y+1,8):
            if board[x][j]=="B": break
            if board[x][j]=="p":
                r+=1
                break
        return r
